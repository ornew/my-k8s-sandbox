apiVersion: kind.x-k8s.io/v1alpha4
kind: Cluster
name: sandbox
runtimeConfig:
  "api/alpha": "true"
# https://kubernetes.io/docs/reference/command-line-tools-reference/feature-gates/
featureGates:
  "CSIMigration": true
  "EphemeralContainers": true
containerdConfigPatches:
- |-
  [plugins."io.containerd.grpc.v1.cri".registry.mirrors."localhost:5000"]
    endpoint = ["http://registry.local:5000"]
networking:
  ipFamily: ipv4
  apiServerAddress: 127.0.0.1
  #apiServerPort: 6443
  #serviceSubnet: 10.96.0.0/12
  #podSubnet: 10.244.0.0/16
  #disableDefaultCNI: true
  #kubeProxyMode: ipvs  # macOS does not work
nodes:
  - role: control-plane
    #image: kindest/node:v1.
    kubeadmConfigPatches:
      - |
        kind: InitConfiguration
        nodeRegistration:
          kubeletExtraArgs:
            node-labels: "my-label=true"
  - role: worker
    #image: kindest/node:v1.
    extraPortMappings:
      - containerPort: 30080
        hostPort: 30080
        listenAddress: "127.0.0.1"
        protocol: tcp
    kubeadmConfigPatches:
      - |
        kind: JoinConfiguration
        nodeRegistration:
          kubeletExtraArgs:
            node-labels: "node-id=1"
#  - role: worker
#    extraPortMappings:
#      - containerPort: 30080
#        hostPort: 30081
#    extraMounts:
#      - hostPath: /path/to/my/files/
#        containerPath: /files
#        readOnly: true
#        selinuxRelabel: false
#        # https://kubernetes.io/docs/concepts/storage/volumes/#mount-propagation
#        propagation: HostToContainer # None, Bidirectional
#    extraPortMappings:
#      - containerPort: 80
#        hostPort: 80
#        listenAddress: "127.0.0.1"
#        protocol: TCP
