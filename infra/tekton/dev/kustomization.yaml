bases:
- ../base
patchesStrategicMerge:
- |
  apiVersion: v1
  kind: ConfigMap
  metadata:
    name: config-defaults
    namespace: tekton-pipelines
  data:
    default-timeout-minutes: "60"
    default-service-account: "default"
    default-managed-by-label-value: "tekton-pipelines"
    #default-pod-template:
    #default-cloud-events-sink:
    #default-task-run-workspace-binding: |
    #  emptyDir: {}
  ---
  apiVersion: v1
  kind: ConfigMap
  metadata:
    name: config-defaults-triggers
    namespace: tekton-pipelines
  data:
    default-service-account: "default"
  ---
  apiVersion: v1
  kind: ConfigMap
  metadata:
    name: feature-flags
    namespace: tekton-pipelines
  data:
    disable-affinity-assistant: "false"
    disable-creds-init: "false"
    enable-api-fields: alpha
    enable-custom-tasks: "false"
    enable-tekton-oci-bundles: "false"
    require-git-ssh-secret-known-hosts: "false"
    running-in-environment-with-injected-sidecars: "true"
    scope-when-expressions-to-task: "true"
  ---
  apiVersion: v1
  kind: ConfigMap
  metadata:
    name: feature-flags-triggers
    namespace: tekton-pipelines
  data:
    enable-api-fields: alpha
    labels-exclusion-pattern: ""
  ---
  apiVersion: v1
  kind: ConfigMap
  metadata:
    name: config-observability
    namespace: tekton-pipelines
  data:
    metrics.backend-destination: prometheus
    #metrics.stackdriver-project-id: "<your stackdriver project id>"
    metrics.allow-stackdriver-custom-metrics: "false"
    metrics.taskrun.level: "taskrun"
    metrics.taskrun.duration-type: "histogram"
    metrics.pipelinerun.level: "pipelinerun"
    metrics.pipelinerun.duration-type: "histogram"
  ---
  apiVersion: v1
  kind: ConfigMap
  metadata:
    labels:
      app.kubernetes.io/instance: default
      app.kubernetes.io/part-of: tekton-triggers
    name: config-observability-triggers
    namespace: tekton-pipelines
  data:
    metrics.backend-destination: prometheus
    #metrics.stackdriver-project-id: "<your stackdriver project id>"
    metrics.allow-stackdriver-custom-metrics: "false"
  ---
  apiVersion: v1
  kind: ConfigMap
  metadata:
    name: config-logging
    namespace: tekton-pipelines
  data:
    loglevel.controller: info
    loglevel.webhook: info
    zap-logger-config: |
      {
        "level": "info",
        "development": false,
        "sampling": {
          "initial": 100,
          "thereafter": 100
        },
        "outputPaths": ["stdout"],
        "errorOutputPaths": ["stderr"],
        "encoding": "json",
        "encoderConfig": {
          "timeKey": "ts",
          "levelKey": "level",
          "nameKey": "logger",
          "callerKey": "caller",
          "messageKey": "msg",
          "stacktraceKey": "stacktrace",
          "lineEnding": "",
          "levelEncoder": "",
          "timeEncoder": "iso8601",
          "durationEncoder": "",
          "callerEncoder": ""
        }
      }
  ---
  apiVersion: v1
  kind: ConfigMap
  metadata:
    name: config-logging-triggers
    namespace: tekton-pipelines
  data:
    loglevel.controller: info
    loglevel.eventlistener: info
    loglevel.webhook: info
    zap-logger-config: |
      {
        "level": "info",
        "development": false,
        "sampling": {
          "initial": 100,
          "thereafter": 100
        },
        "outputPaths": ["stdout"],
        "errorOutputPaths": ["stderr"],
        "encoding": "json",
        "encoderConfig": {
          "timeKey": "ts",
          "levelKey": "level",
          "nameKey": "logger",
          "callerKey": "caller",
          "messageKey": "msg",
          "stacktraceKey": "stacktrace",
          "lineEnding": "",
          "levelEncoder": "",
          "timeEncoder": "iso8601",
          "durationEncoder": "",
          "callerEncoder": ""
        }
      }
  ---
  apiVersion: v1
  kind: ConfigMap
  metadata:
    name: config-artifact-bucket
    namespace: tekton-pipelines
  ---
  apiVersion: v1
  kind: ConfigMap
  metadata:
    name: config-artifact-pvc
    namespace: tekton-pipelines
  ---
  apiVersion: v1
  kind: ConfigMap
  metadata:
    name: config-registry-cert
    namespace: tekton-pipelines
  ---
  apiVersion: v1
  kind: ConfigMap
  metadata:
    name: config-leader-election
    namespace: tekton-pipelines
  data:
    lease-duration: 60s
    renew-deadline: 40s
    retry-period: 10s
